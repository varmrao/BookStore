# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-12-02 07:42
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FName', models.CharField(max_length=75)),
                ('LName', models.CharField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('ISBN', models.IntegerField()),
                ('price', models.FloatField()),
                ('publication_year', models.IntegerField()),
                ('bookcover', models.CharField(max_length=500)),
                ('number_of_books_instock', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='BookBuyTrans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('date', models.DateField()),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstr.Book')),
            ],
        ),
        migrations.CreateModel(
            name='BookReorder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='BooksInReorder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstr.Book')),
                ('reorder_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstr.BookReorder')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_copies', models.IntegerField()),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstr.Book')),
            ],
        ),
        migrations.CreateModel(
            name='CrediCardOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CC_No', models.CharField(max_length=20)),
                ('NameOnCard', models.CharField(max_length=75)),
                ('exp_date', models.DateField()),
                ('cvv', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('cust_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('FName', models.CharField(max_length=75)),
                ('LName', models.CharField(max_length=75)),
                ('HouseNo', models.IntegerField()),
                ('StreetNo', models.IntegerField()),
                ('City', models.CharField(max_length=100)),
                ('State', models.CharField(max_length=75)),
                ('Country', models.CharField(max_length=75)),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=50)),
                ('bookname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstr.Book')),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.IntegerField()),
                ('OwnName', models.CharField(max_length=75)),
                ('cust_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name='WrittenBy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstr.Author')),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstr.Book')),
            ],
        ),
        migrations.AddField(
            model_name='credicardowner',
            name='cc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstr.CreditCard'),
        ),
        migrations.AddField(
            model_name='credicardowner',
            name='userid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cart',
            name='us',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bookreorder',
            name='storeid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstr.Owner'),
        ),
        migrations.AddField(
            model_name='bookbuytrans',
            name='cc_num',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstr.CreditCard'),
        ),
        migrations.AddField(
            model_name='bookbuytrans',
            name='cust_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstr.Publisher'),
        ),
        migrations.AlterUniqueTogether(
            name='writtenby',
            unique_together=set([('book_id', 'author_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='genre',
            unique_together=set([('bookname', 'genre')]),
        ),
        migrations.AlterUniqueTogether(
            name='credicardowner',
            unique_together=set([('cc', 'userid')]),
        ),
        migrations.AlterUniqueTogether(
            name='booksinreorder',
            unique_together=set([('reorder_id', 'book_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='bookbuytrans',
            unique_together=set([('cust_id', 'cc_num')]),
        ),
    ]
